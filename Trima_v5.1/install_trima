#!/bin/ksh
#---------------------------------------------------------------------------
# Copyright (c) 1997, by Cobe BCT, Inc.  All rights reserved
# install_trima - QNX ksh script, written by WTM 10/27/98
#                 derived from replicat by SBB 07/10/97
#
#---------------------------------------------------------------------------
#ifdef __USAGE
#%C - install an archived Trima version onto an existing Trima hard drive.
#
#
#Usage:
#%C
#
#endif
#---------------------------------------------------------------------------
# Revision History:
# 10/27/98 WTM Creation.
#---------------------------------------------------------------------------
# Move to /d/update...
cd /d/update

me=${0##*/}
startdir=$PWD
target=$PWD"/newroot"

echo "*************************************************************"
echo "*************************************************************"
echo "*************************************************************"
echo "*************************************************************"
echo "*************************************************************"
echo "*************************************************************"
echo "******                                                 ******"
echo "******             STARTING INSTALL OF                 ******"
echo "******               TRIMA SOFTWARE                    ******"
echo "******                                                 ******"
echo "*************************************************************"
echo "*************************************************************"
echo "*************************************************************"
echo "*************************************************************"
echo "*************************************************************"
echo "*************************************************************"

#
# Print out the working information.
#
echo "Current directory = ${startdir}"
echo "Target directory = ${target}"

#
# Ensure that the script is only run in the /d/update directory.
#
if [ $startdir != "/d/update" ] ; then
   echo "$me: MUST BE RUN IN /d/update"
   exit 1
fi

#
# Check to see if other installation upgrade utilities exist
#
echo "Checking for necessary files"
for FILE in updatetrima \
            savefiles \
            mvfiletoabspos \
            vxbootpartition \
	    ampro_cbios_update \
	    ampro_sbios_update
do
   if [ ! -f ./$FILE ] ; then
      echo "$me: $FILE not found.  Aborting procedure"
      echo
      echo "Install failed"
      exit 1
   fi
done

echo "Checking BIOS revisions"
biosUpdate=0
./ampro_cbios_update -t
if [ $? -ne 0 ] ; then
   echo
   echo "System requires a BIOS update for the control processor board.  If"
   echo "the BIOS programming tool is already installed, follow the instrutions"
   echo "below to perform the update.  Otherwise, power-off the machine,"
   echo "install the BIOS programming tool, and re-run this procedure."
   echo
   biosUpdate=1
   ./ampro_cbios_update
fi

on -n1 ./ampro_sbios_update -t
if [ $? -ne 0 ] ; then
   echo
   echo "System requires a BIOS update for the safety processor board.  If"
   echo "the BIOS programming tool is already installed, follow the instrutions"
   echo "below to perform the update.  Otherwise, power-off the machine,"
   echo "install the BIOS programming tool, and re-run this procedure."
   echo
   biosUpdate=1
   on -n1 ./ampro_sbios_update
fi

if [ ${biosUpdate} -ne 0 ] ; then
   echo "The machine must be rebooted following the BIOS update.  Power-off the"
   echo "machine and remove the BIOS programming tool.  Then re-run this procedure."
   echo
   while [ 1 ] do
     sleep 10
   done
else
   echo "BIOS check complete.  No update necessary."
fi

#
# Delete any old target directory.
#
echo "Removing the target directory ${target}"
rm -rf ${target}

#
# Untar the installation tools 
#
echo "Restoring upgradetrima archive to ${startdir}"
tar -xvf upgradetrima
if [ $? -ne 0 ] ; then
   echo "$me: archive error on upgradetrima"
   echo "Install failed"
   exit 1
fi

#
# Save the necessary install files for use after the reboot 
#  and repartition into vxWorks
#
savefiles /saved_files
if [ $? -ne 0 ] ; then
   echo "$me: saving installation and log files error"
   echo "Install failed"
   exit 1
fi


#
# Move the saved file to an absolute position on the /d partition
#
mvfiletoabspos /saved_files /dev/hd0 1048576000
if [ $? -ne 0 ] ; then
   echo "$me: move file to a fixed and contiguous location failed"
   echo "Install failed"
   exit 1
fi


#
# Overlay the vxWorks parition on the disk starting at /dev/hd0 
#  position 0
#
mvfiletoabspos /d/update/vxbootpartition /dev/hd0 0
if [ $? -ne 0 ] ; then
   echo "$me: vxWorks disk creation error"
   echo "Install failed"
   exit 1
fi


#
# Done with procedure.
#
cat << END_OF_MESSAGE

The machine will now reboot and finish the install of the software.
While the machine is in the reboot mode you will not be able to
get any service mode services, so please do not attempt to enter
service mode. Thank you...

Machine is shutting down...

END_OF_MESSAGE

shutdown -f
sleep 10

exit 0
